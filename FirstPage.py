#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.3
#  in conjunction with Tcl version 8.6
#    Feb 25, 2022 09:43:55 PM +0530  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import FirstPage_support


class Toplevel1:

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=
        [('selected', _compcolor), ('active', _ana2color)])

        top.geometry("899x661+103+41")
        top.minsize(116, 1)
        top.maxsize(1370, 750)
        top.resizable(1, 1)
        top.title("Smart Health Care Monitoring System")
        top.configure(background="black")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top
        self.combobox = tk.StringVar()

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.012, rely=0.022, relheight=0.950, relwidth=0.97)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="black")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.022, rely=0.091, height=51, width=781)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="green")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Baskerville Old Face} -size 30 -weight bold")
        self.Label1.configure(foreground="#ffffff")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''  * Multiple Disease Prediction System *''')

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.037, rely=0.255, height=38, width=135)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Segoe UI} -size 9")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Name of Patient''')

        self.Text1 = tk.Text(self.Frame1)
        self.Text1.place(relx=0.183, rely=0.255, relheight=0.064, relwidth=0.266)

        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="blue")
        self.Text1.configure(selectforeground="white")
        self.Text1.configure(wrap="word")

        self.Label3 = tk.Label(self.Frame1)
        self.Label3.place(relx=0.037, rely=0.328, height=37, width=133)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Symptom 1:''')

        self.Label3_1 = tk.Label(self.Frame1)
        self.Label3_1.place(relx=0.037, rely=0.401, height=37, width=133)
        self.Label3_1.configure(activebackground="#f9f9f9")
        self.Label3_1.configure(activeforeground="black")
        self.Label3_1.configure(anchor='w')
        self.Label3_1.configure(background="#d9d9d9")
        self.Label3_1.configure(compound='left')
        self.Label3_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1.configure(foreground="#000000")
        self.Label3_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1.configure(highlightcolor="black")
        self.Label3_1.configure(text='''Symptom 2:''')

        self.Label3_1_1 = tk.Label(self.Frame1)
        self.Label3_1_1.place(relx=0.037, rely=0.474, height=37, width=135)
        self.Label3_1_1.configure(activebackground="#f9f9f9")
        self.Label3_1_1.configure(activeforeground="black")
        self.Label3_1_1.configure(anchor='w')
        self.Label3_1_1.configure(background="#d9d9d9")
        self.Label3_1_1.configure(compound='left')
        self.Label3_1_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1_1.configure(foreground="#000000")
        self.Label3_1_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1_1.configure(highlightcolor="black")
        self.Label3_1_1.configure(text='''Symptom 3:''')

        self.Label3_1_1_1 = tk.Label(self.Frame1)
        self.Label3_1_1_1.place(relx=0.037, rely=0.547, height=37, width=135)
        self.Label3_1_1_1.configure(activebackground="#f9f9f9")
        self.Label3_1_1_1.configure(activeforeground="black")
        self.Label3_1_1_1.configure(anchor='w')
        self.Label3_1_1_1.configure(background="#d9d9d9")
        self.Label3_1_1_1.configure(compound='left')
        self.Label3_1_1_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1_1_1.configure(foreground="#000000")
        self.Label3_1_1_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1_1_1.configure(highlightcolor="black")
        self.Label3_1_1_1.configure(text='''Symptom 4:''')

        self.Label3_1_1_1_1 = tk.Label(self.Frame1)
        self.Label3_1_1_1_1.place(relx=0.037, rely=0.62, height=37, width=135)
        self.Label3_1_1_1_1.configure(activebackground="#f9f9f9")
        self.Label3_1_1_1_1.configure(activeforeground="black")
        self.Label3_1_1_1_1.configure(anchor='w')
        self.Label3_1_1_1_1.configure(background="#d9d9d9")
        self.Label3_1_1_1_1.configure(compound='left')
        self.Label3_1_1_1_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1_1_1_1.configure(foreground="#000000")
        self.Label3_1_1_1_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1_1_1_1.configure(highlightcolor="black")
        self.Label3_1_1_1_1.configure(text='''Symptom 5:''')

        self.TCombobox1 = ttk.Combobox(self.Frame1)
        self.TCombobox1.place(relx=0.185, rely=0.328, relheight=0.056
                              , relwidth=0.261)

        # self.TCombobox1.configure(textvariable=self.combobox)
        self.TCombobox1.configure(takefocus="")

        self.TCombobox2 = ttk.Combobox(self.Frame1)
        self.TCombobox2.place(relx=0.185, rely=0.401, relheight=0.056
                              , relwidth=0.26)

        # self.TCombobox2.configure(values=l1)
        # self.TCombobox2.configure(textvariable=self.combobox)
        self.TCombobox2.configure(takefocus="")

        self.TCombobox3 = ttk.Combobox(self.Frame1)
        self.TCombobox3.place(relx=0.185, rely=0.474, relheight=0.056
                              , relwidth=0.261)

        # self.TCombobox3.configure(textvariable=self.combobox)
        self.TCombobox3.configure(takefocus="")

        self.TCombobox4 = ttk.Combobox(self.Frame1)
        self.TCombobox4.place(relx=0.185, rely=0.547, relheight=0.056
                              , relwidth=0.261)

        # self.TCombobox4.configure(textvariable=self.combobox)
        self.TCombobox4.configure(takefocus="")

        self.TCombobox5 = ttk.Combobox(self.Frame1)
        self.TCombobox5.place(relx=0.185, rely=0.62, relheight=0.056
                              , relwidth=0.263)
        self.input_combo()

        # self.TCombobox5.configure(textvariable=self.combobox)
        self.TCombobox5.configure(takefocus="")

        self.Label4 = tk.Label(self.Frame1)
        self.Label4.place(relx=0.037, rely=0.745, height=30, width=127)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(anchor='w')
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(compound='left')
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Decision Tree''')

        self.Label5 = tk.Label(self.Frame1)
        self.Label5.place(relx=0.037, rely=0.804, height=30, width=126)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(anchor='w')
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(compound='left')
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Random Forest''')

        self.Label6 = tk.Label(self.Frame1)
        self.Label6.place(relx=0.037, rely=0.863, height=30, width=126)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(anchor='w')
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(compound='left')
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''Naive Bayes''')

        self.Text2 = tk.Text(self.Frame1)
        self.Text2.place(relx=0.185, rely=0.745, relheight=0.05, relwidth=0.261)
        self.Text2.configure(background="white")
        self.Text2.configure(font="TkTextFont")
        self.Text2.configure(foreground="black")
        self.Text2.configure(highlightbackground="#d9d9d9")
        self.Text2.configure(highlightcolor="black")
        self.Text2.configure(insertbackground="black")
        self.Text2.configure(selectbackground="blue")
        self.Text2.configure(selectforeground="white")
        self.Text2.configure(wrap="word")

        self.Text3 = tk.Text(self.Frame1)
        self.Text3.place(relx=0.185, rely=0.804, relheight=0.052, relwidth=0.259)

        self.Text3.configure(background="white")
        self.Text3.configure(font="TkTextFont")
        self.Text3.configure(foreground="black")
        self.Text3.configure(highlightbackground="#d9d9d9")
        self.Text3.configure(highlightcolor="black")
        self.Text3.configure(insertbackground="black")
        self.Text3.configure(selectbackground="blue")
        self.Text3.configure(selectforeground="white")
        self.Text3.configure(wrap="word")

        self.Text4 = tk.Text(self.Frame1)
        self.Text4.place(relx=0.185, rely=0.863, relheight=0.05, relwidth=0.261)
        self.Text4.configure(background="white")
        self.Text4.configure(font="TkTextFont")
        self.Text4.configure(foreground="black")
        self.Text4.configure(highlightbackground="#d9d9d9")
        self.Text4.configure(highlightcolor="black")
        self.Text4.configure(insertbackground="black")
        self.Text4.configure(selectbackground="blue")
        self.Text4.configure(selectforeground="white")
        self.Text4.configure(wrap="word")

        self.Button1 = tk.Button(self.Frame1)
        self.Button1.place(relx=0.646, rely=0.304, height=44, width=177)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        # self.Button1.configure(command=FirstPage_support.dec_tree)
        # import Decisiontree
        # self.Button1.configure(command=Decisiontree.decis_tree())
        self.Button1.configure(command=self.input_sym)

        self.Button1.configure(compound='left')
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''DECISION TREE''')

        self.Button2 = tk.Button(self.Frame1)
        self.Button2.place(relx=0.646, rely=0.41, height=44, width=177)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(command=self.input_sym1)
        self.Button2.configure(compound='left')
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''RANDOM FOREST''')

        self.Button3 = tk.Button(self.Frame1)
        self.Button3.place(relx=0.646, rely=0.517, height=44, width=177)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(command=self.input_sym2)
        self.Button3.configure(compound='left')
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''NAIVE BAYES''')

        self.Button4 = tk.Button(self.Frame1)
        self.Button4.place(relx=0.646, rely=0.608, height=44, width=177)
        self.Button4.configure(activebackground="#ececec")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#d9d9d9")
        self.Button4.configure(command=FirstPage_support.drug_dos_find)
        self.Button4.configure(compound='left')
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''DRUG DOSAGE FINDER''')

        self.Button5 = tk.Button(self.Frame1)
        self.Button5.place(relx=0.646, rely=0.699, height=44, width=177)
        self.Button5.configure(activebackground="#ececec")
        self.Button5.configure(activeforeground="#000000")
        self.Button5.configure(background="#d9d9d9")
        self.Button5.configure(command=FirstPage_support.extt)
        self.Button5.configure(compound='left')
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="black")
        self.Button5.configure(pady="0")
        self.Button5.configure(text='''EXIT''')

    def input_combo(self):
        # ------------------------------------------------------------------------------------------------
        l1 = ['None', 'back_pain', 'constipation', 'abdominal_pain', 'diarrhoea', 'mild_fever', 'yellow_urine',
              'yellowing_of_eyes', 'acute_liver_failure', 'fluid_overload', 'swelling_of_stomach',
              'swelled_lymph_nodes', 'malaise', 'blurred_and_distorted_vision', 'phlegm', 'throat_irritation',
              'redness_of_eyes', 'sinus_pressure', 'runny_nose', 'congestion', 'chest_pain', 'weakness_in_limbs',
              'fast_heart_rate', 'pain_during_bowel_movements', 'pain_in_anal_region', 'bloody_stool',
              'irritation_in_anus', 'neck_pain', 'dizziness', 'cramps', 'bruising', 'obesity', 'swollen_legs',
              'swollen_blood_vessels', 'puffy_face_and_eyes', 'enlarged_thyroid', 'brittle_nails',
              'swollen_extremeties', 'excessive_hunger', 'extra_marital_contacts', 'drying_and_tingling_lips',
              'slurred_speech', 'knee_pain', 'hip_joint_pain', 'muscle_weakness', 'stiff_neck', 'swelling_joints',
              'movement_stiffness', 'spinning_movements', 'loss_of_balance', 'unsteadiness',
              'weakness_of_one_body_side', 'loss_of_smell', 'bladder_discomfort', 'foul_smell_of urine',
              'continuous_feel_of_urine', 'passage_of_gases', 'internal_itching', 'toxic_look_(typhos)',
              'depression', 'irritability', 'muscle_pain', 'altered_sensorium', 'red_spots_over_body', 'belly_pain',
              'abnormal_menstruation', 'dischromic _patches', 'watering_from_eyes', 'increased_appetite', 'polyuria',
              'family_history', 'mucoid_sputum',
              'rusty_sputum', 'lack_of_concentration', 'visual_disturbances', 'receiving_blood_transfusion',
              'receiving_unsterile_injections', 'coma', 'stomach_bleeding', 'distention_of_abdomen',
              'history_of_alcohol_consumption', 'fluid_overload', 'blood_in_sputum', 'prominent_veins_on_calf',
              'palpitations', 'painful_walking', 'pus_filled_pimples', 'blackheads', 'scurring', 'skin_peeling',
              'silver_like_dusting', 'small_dents_in_nails', 'inflammatory_nails', 'blister', 'red_sore_around_nose',
              'yellow_crust_ooze']
        # ----------------------------------------------------------------------------------------------------

        self.TCombobox1.configure(values=l1)
        self.TCombobox2.configure(values=l1)
        self.TCombobox3.configure(values=l1)
        self.TCombobox4.configure(values=l1)
        self.TCombobox5.configure(values=l1)
        self.TCombobox1.current(0)
        self.TCombobox2.current(0)
        self.TCombobox3.current(0)
        self.TCombobox4.current(0)
        self.TCombobox5.current(0)
#-------------------------------------First Button-----------------------------------------------------------------------
    def input_sym(self):
        # entry variables
        Symptom1 = self.TCombobox1.get()
        Symptom2 = self.TCombobox2.get()
        Symptom3 = self.TCombobox3.get()
        Symptom4 = self.TCombobox4.get()
        Symptom5 = self.TCombobox5.get()

        import FirstPage_support
        decte = FirstPage_support.dec_tree(Symptom1, Symptom2, Symptom3, Symptom4, Symptom5)
        self.Text2.delete("1.0", END)
        if decte == 0:
            self.Text2.insert(END, "Not Found")
        else:
            self.Text2.insert(END, decte)

# -------------------------------------second Button-----------------------------------------------------------------------
    def input_sym1(self):
                # entry variables
        Symptom1 = self.TCombobox1.get()
        Symptom2 = self.TCombobox2.get()
        Symptom3 = self.TCombobox3.get()
        Symptom4 = self.TCombobox4.get()
        Symptom5 = self.TCombobox5.get()

        import FirstPage_support
        decte = FirstPage_support.dec_tree(Symptom1, Symptom2, Symptom3, Symptom4, Symptom5)
        self.Text3.delete("1.0", END)
        if decte == 0:
            self.Text3.insert(END, "Not Found")
        else:
            self.Text3.insert(END, decte)

# -------------------------------------Third Button-----------------------------------------------------------------------

    def input_sym2(self):
                # entry variables
        Symptom1 = self.TCombobox1.get()
        Symptom2 = self.TCombobox2.get()
        Symptom3 = self.TCombobox3.get()
        Symptom4 = self.TCombobox4.get()
        Symptom5 = self.TCombobox5.get()

        import FirstPage_support
        decte1 = FirstPage_support.naive_bayes(Symptom1, Symptom2, Symptom3, Symptom4, Symptom5)
        print(decte1)
        self.Text4.delete("1.0", END)
        if decte1 == 0:
            self.Text4.insert(END, "Not Found")
        else:
            self.Text4.insert(END, decte1)
            


def start_up():
    FirstPage_support.main()


if __name__ == '__main__':
    start_up()
